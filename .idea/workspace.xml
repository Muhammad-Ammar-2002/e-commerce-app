<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="614d9a61-d604-4639-a9b2-6e90624b5efe" name="Changes" comment="&quot;ignore db data files&quot;" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Record" />
        <option value="Enum" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Muhammad-Ammar-2002&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Muhammad-Ammar-2002/e-commerce-app.git&quot;,
    &quot;accountId&quot;: &quot;be482c8f-ad0e-4e8b-b302-6025574d9a10&quot;
  }
}</component>
  <component name="MavenRunner">
    <option name="jreName" value="jbr-17" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2uIQvyhJZNu5CVVDIf3tIyotE3g" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="sortByType" value="true" />
    <option name="sortKey" value="BY_TYPE" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.ConfigServer.executor&quot;: &quot;Debug&quot;,
    &quot;Application.ConfigServerApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.CustomerApp.executor&quot;: &quot;Debug&quot;,
    &quot;Application.CustomerApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.Discovery.executor&quot;: &quot;Debug&quot;,
    &quot;Application.DiscoveryApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.DiscoveryServer.executor&quot;: &quot;Debug&quot;,
    &quot;Application.GatewayApp.executor&quot;: &quot;Debug&quot;,
    &quot;Application.NotificationApp.executor&quot;: &quot;Debug&quot;,
    &quot;Application.OrderApp.executor&quot;: &quot;Debug&quot;,
    &quot;Application.PaymentApp.executor&quot;: &quot;Debug&quot;,
    &quot;Application.ProductApp.executor&quot;: &quot;Debug&quot;,
    &quot;Application.ProductApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.com.learn.e_commerce.ConfigServerApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Docker.DockerMongo.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mongo-express: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mongodb: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.pgadmin: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.postgresql: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.zooKeeper: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-mongo-compose.yml.mongo-express: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-mongo-compose.yml.mongodb: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-mongo-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.All in discovery (١).executor&quot;: &quot;Run&quot;,
    &quot;JUnit.All in discovery.executor&quot;: &quot;Debug&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;deletionFromPopupRequiresConfirmation&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_directory_selection&quot;: &quot;E:/java/spring/e-commerce-app/services/order/src/main/java/com/learn/e_commerce/order/Product&quot;,
    &quot;last_opened_file_path&quot;: &quot;E:/java/spring/e-commerce-app&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.learn.e_commerce.notification.Kafka.Order" />
      <recent name="com.learn.e_commerce.Kafka.Order" />
      <recent name="com.learn.e_commerce.Kafka.Payment" />
      <recent name="com.learn.e_commerce.notification.Notification" />
      <recent name="com.learn.e_commerce.order.Payment" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\java\spring\e-commerce-app" />
      <recent name="E:\java\spring\e-commerce-app\services\order\src\main\java\com\learn\e_commerce\order" />
      <recent name="E:\java\spring\e-commerce-app\services\product\src\main\java\com\learn\e_commerce" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\java\spring\e-commerce-app\services" />
      <recent name="E:\java\spring\e-commerce-app" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="com.learn.e_commerce" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="Application" />
        <option value="CompoundRunConfigurationType" />
        <option value="MavenRunConfiguration" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml.pgadmin: Compose Deployment">
    <configuration name="ConfigServer" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.learn.e_commerce.ConfigServerApplication" />
      <module name="config-server" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CustomerApp" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.learn.e_commerce.CustomerApplication" />
      <module name="customer" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryServer" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.learn.e_commerce.DiscoveryApplication" />
      <module name="discovery" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GatewayApp" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.learn.e_commerce.GatewayApplication" />
      <module name="gateway" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationApp" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.learn.e_commerce.NotificationApplication" />
      <module name="notification" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderApp" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.learn.e_commerce.OrderApplication" />
      <module name="order" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PaymentApp" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.learn.e_commerce.payment.PaymentApplication" />
      <module name="payment" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductApp" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.learn.e_commerce.ProductApplication" />
      <module name="product" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="config-server" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="config-server" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mongo-express: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mongo-express" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mongodb: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mongodb" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.pgadmin: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="pgadmin" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.postgresql: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgresql" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.ConfigServer" />
      <item itemvalue="Application.CustomerApp" />
      <item itemvalue="Application.DiscoveryServer" />
      <item itemvalue="Application.GatewayApp" />
      <item itemvalue="Application.NotificationApp" />
      <item itemvalue="Application.OrderApp" />
      <item itemvalue="Application.PaymentApp" />
      <item itemvalue="Application.ProductApp" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.mongo-express: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.mongodb: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.pgadmin: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.postgresql: Compose Deployment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.pgadmin: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.postgresql: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.mongo-express: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.mongodb: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="614d9a61-d604-4639-a9b2-6e90624b5efe" name="Changes" comment="" />
      <created>1741933844698</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1741933844698</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠١" summary="&quot;start e-commerce project and implement config-server, discover-server and customer-microservice&quot;">
      <option name="closed" value="true" />
      <created>1742361661189</created>
      <option name="number" value="٠٠٠٠١" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠١" />
      <option name="project" value="LOCAL؜" />
      <updated>1742361661190</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠٢" summary="&quot;start e-commerce project and implement config-server, discover-server and customer-microservice&quot;">
      <option name="closed" value="true" />
      <created>1743526137080</created>
      <option name="number" value="٠٠٠٠٢" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠٢" />
      <option name="project" value="LOCAL؜" />
      <updated>1743526137080</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠٣" summary="&quot;fix project&quot;">
      <option name="closed" value="true" />
      <created>1743528210000</created>
      <option name="number" value="٠٠٠٠٣" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠٣" />
      <option name="project" value="LOCAL؜" />
      <updated>1743528210000</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠٤" summary="&quot;implement .gitignore&quot;">
      <option name="closed" value="true" />
      <created>1743528660438</created>
      <option name="number" value="٠٠٠٠٤" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠٤" />
      <option name="project" value="LOCAL؜" />
      <updated>1743528660438</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠٥" summary="&quot;implement .gitignore&quot;">
      <option name="closed" value="true" />
      <created>1743528784904</created>
      <option name="number" value="٠٠٠٠٥" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠٥" />
      <option name="project" value="LOCAL؜" />
      <updated>1743528784905</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠٦" summary="&quot;fix pom.xml files&quot;">
      <option name="closed" value="true" />
      <created>1743572726934</created>
      <option name="number" value="٠٠٠٠٦" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠٦" />
      <option name="project" value="LOCAL؜" />
      <updated>1743572726934</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠٧" summary="&quot;Implement all microservices&quot;">
      <option name="closed" value="true" />
      <created>1743750850970</created>
      <option name="number" value="٠٠٠٠٧" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠٧" />
      <option name="project" value="LOCAL؜" />
      <updated>1743750851195</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠٨" summary="&quot;add zipKin and sava db data&quot;">
      <option name="closed" value="true" />
      <created>1743851899417</created>
      <option name="number" value="٠٠٠٠٨" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠٨" />
      <option name="project" value="LOCAL؜" />
      <updated>1743851899417</updated>
    </task>
    <task id="LOCAL؜-٠٠٠٠٩" summary="&quot;ignore db data files&quot;">
      <option name="closed" value="true" />
      <created>1743852353513</created>
      <option name="number" value="٠٠٠٠٩" />
      <option name="presentableId" value="LOCAL؜-٠٠٠٠٩" />
      <option name="project" value="LOCAL؜" />
      <updated>1743852353513</updated>
    </task>
    <option name="localTasksCounter" value="10" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="&quot;Implement product service and fix&#10;customer and discovery service&quot;" />
    <MESSAGE value="&quot;start e-commerce project and implement config-server, discover-server and customer-microservice&quot;" />
    <MESSAGE value="&quot;fix project&quot;" />
    <MESSAGE value="&quot;implement .gitignore&quot;" />
    <MESSAGE value="&quot;fix pom.xml files&quot;" />
    <MESSAGE value="&quot;Implement all microservices&quot;" />
    <MESSAGE value="&quot;fix docker issues and other microservices issues&quot;" />
    <MESSAGE value="&quot;add zipKin and sava db data&quot;" />
    <MESSAGE value="&quot;ignore db data files&quot;" />
    <option name="LAST_COMMIT_MESSAGE" value="&quot;ignore db data files&quot;" />
    <option name="GROUP_MULTIFILE_MERGE_BY_DIRECTORY" value="true" />
  </component>
</project>