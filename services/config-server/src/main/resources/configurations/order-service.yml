server:
  port: 8070
  servlet:
    context-path: "/Order-Service"

spring:
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: OrderConfirmation:com.learn.e_commerce.Kafka.OrderConfirmation
  datasource:
    url: jdbc:postgresql://localhost:55432/order
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

application:
  config:
    customer-url: http://localhost:8222/api/v1/customer
    payment-url:  http://localhost:8222/api/v1/payment
    product-url:  http://localhost:8222/api/v1/product

management:

  health:
    show-details: ALWAYS
  circuitbreaker:
    enabled: true
  endpoint:
    health:
      show-details: ALWAYS
      #apring boot admin
    endpoint:
      web:
        exposure:
          include: "*"

resilience4j:
  circuitbreaker:
    instances:
      getCustomer:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 10
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
